+get intial repo setup

+use CRA to create basic typescript react app

+create POC for uploading images and storing them in indexedDB

+create POC for affine transformation based image alignment 

+develop general outline of app 

+improve performance of mark component

+add auto-resize option when loading images 

+add initializer for default settings 

+add ratio lock option for adjust component image scaling

+improve layout/styling 

+add better/more load indicators

+add validations to viewer processing 

+load any already processed images on viewer component load

+improve options for processing/re-processing images in viewer component

+improve caching of images 

+test performance on various devices
	+explore options for improving image performance

+store image natural dimensions in DB so they dont have to be re-calculated on the fly by loading image

+add check for viewer that adjustment image (image selected for adjustment) exists

+improve overall data/state validation and warning display
	+potentially modularize and make global

+add functionality to abort 'export video locally' frame rendering loop
	--for example when the page changes or with a cancel button

+add option on viewer component to process just entries with no aligned image (partial processing)

+consider making cropping resize instead of reset to corners when image scaling is changed (on adjust component)

+refine paging functionality on entry component 

+add streamlined "add entry" wizard to entry component

+improve styles (layout and code)
	--implement bulma?

+add clear marks option to mark image component

+improve dialogs/modals

+fix typescript error for HTMLDialogElement
	--doesnt think show, showModal, or close methods exist

+modularize common db calls 

+make it so that boolean 'false' can be entered on the settings component
	--currently entering 'false' puts in literal 'false' string which is truthy
